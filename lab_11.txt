---------------------------Lab_11-----------------------------------
---------------------------Part_A-----------------------------------


1. Find employees whose name start with E.
db.employee.find({ENAME:{$regex:/^E/,$options:'i'}})

2. Find employees whose name ends with n.
db.employee.find({ENAME:{$regex:/n$/,$options:'i'}})

3. Find employees whose name starts with S or M in your collection.
db.employee.find({ENAME:{$regex:/^[SM]/,$options:'i'}})

4. Find employees where city starts with A to M in your collection.
db.employee.find({ENAME:{regex:/^[A-M]/,$options:'i'}})

5. Find employees where city name ends in ‘ney’.
db.employee.find({CITY:{$regex:/ney$/,$options:'i'}})

6. Display employee info whose name contains n. (Both uppercase(N) and lowercase(n))
db.employee.find({ENAME:{$regex:/[n]/,$options:'i'}})

7. Display employee info whose name starts with E and having 5 characters.
db.employee.find({ENAME:{$regex:/^E.{4}/,$options:'i'}})

8. Display employee whose name start with S and ends in a.
db.employee.find({ENAME:{$regex:/^S.*a/,$options:'i'}})

9. Display EID, ENAME, CITY and SALARY whose name starts with ‘Phi’.
db.employee.find({ENAME:{$regex:/^Phi/,$options:'i'}},{EID:1,ENAME:1,CITY:1})

10. Display ENAME, JOININGDATE and CITY whose city contains ‘dne’ as three letters in city name.
db.employee.find({CITY:{$regex:/dne/,$options:'i'}},{ENAME:1,JOININGDATE:1,CITY:1})

11. Display ENAME, JOININGDATE and CITY who does not belongs to city London or Sydney.
db.employee.find({$nor:[{CITY:{$regex:/Sydney/}},{CITY:{$regex:/London/}}]},{ENAME:1,JOININGDATE:1,CITY:1})

12. Find employees whose names start with 'J'.
db.employee.find({ENAME:{$regex:/^J/,$options:'i'}})

13. Find employees whose names end with 'y'.
db.employee.find({ENAME:{$regex:/y$/,$options:'i'}})

14. Find employees whose names contain the letter 'a'.
db.employee.find({ENAME:{$regex:/a/,$options:'i'}})

15. Find employees whose names contain either 'a' or 'e'.
db.employee.find({ENAME:{$regex:/[ae]/,$options:'i'}})

16. Find employees whose names start with 'J' and end with 'n'.
db.employee.find({ENAME:{$regex:/^J.*n$/,$options:'i'}})

17. Find employees whose CITY starts with 'New'.
db.employee.find({CITY:{$regex:/^New/,$options:'i'}})

18. Find employees whose CITY does not start with 'L'
db.employee.find({CITY:{$not:/^l/i}})

19. Find employees whose CITY contains the word 'York'.
db.employee.find({CITY:{$regex:/York/}})

20. Find employees whose names have two consecutive vowels (a, e, i, o, u).
db.employee.find({ENAME:{$regex:/[aeiou]{2}/,$options:'i'}})

21. Find employees whose names have three or more letters.
db.employee.find({ENAME:{$regex:/.{3,}/,$options:'i'}})

22. Find employees whose names have exactly 4 letters.
db.employee.find({ENAME:{$regex:/^.{4}$/,$options:'i'}})

23. Find employees whose names start with either 'S' or 'M'.
db.employee.find({ENAME:{$regex:/^[SM]/,$options:'i'}})

24. Find employees whose names contain 'il' anywhere.
db.employee.find({ENAME:{$regex:/il/,$options:'i'}})

25. Find employees whose names do not contain 'a'.
db.employee.find({ENAME:{$not:/A/i}})

26. Find employees whose names contain any digit.
db.employee.find({ENAME:{$regex:/\d/,$options:'i'}})

27. Find employees whose names contain exactly one vowel.
db.employee.find({ENAME:{$regex:/^[^aeiou]*[aeiou][^aeiou]*$/,$options:'i'}})

28. Find employees whose names start with any uppercase letter followed by any lowercase letter.
db.employee.find({ENAME:{$regex:/^[A-Z][a-z]/,$options:'i'}})


----------------------------------------PART - B------------------------------------
1. Display documents where sname start with K.
db.Student.find({SNAME:/^k/i})

2. Display documents where sname starts with Z or D.
db.Student.find({SNAME:/^[ZD]/i})

3. Display documents where city starts with A to R.
db.Student.find({CITY:/^[A-R]/i})

4. Display students’ info whose name start with P and ends with i.
db.Student.find({SNAME:/^P.*i$/i})

5. Display students’ info whose department name starts with ‘C’.
db.Student.find({DEPARTMENT:/^C/i})

6. Display name, sem, fees, and department whose city contains ‘med’ as three letters somewhere in city
name.
db.Student.find({CITY:/med/},{SNAME:1,SEM:1,FEES:1,DEPARTMENT:1})

7. Display name, sem, fees, and department who does not belongs to city Rajkot or Baroda.
db.Student.find({$nor:[{CITY:/Rajkot/},{CITY:/Baroda/}]},{SNAME:1,SEM:1,FEES:1,DEPARTMENT:1})

8. Find students whose names start with 'K' and are followed by any character.
db.Student.find({SNAME:/^K.*/})

9. Find students whose names end with 'a'.
db.Student.find({SNAME:/a$/})

10. Find students whose names contain 'ri'. (case-insensitive)
db.Student.find({SNAME:/ri/i})